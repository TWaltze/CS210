;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_malloc
	.import		_free
	.import		_cprintf
	.import		_cscanf
	.export		_Employee_get_id
	.export		_Employee_set_id
	.export		_Employee_get_name
	.export		_Employee_set_name
	.export		_Employee_get_salary
	.export		_Employee_set_salary
	.export		_Employee_display
	.export		_Employee_Employee
	.export		_Employee_new
	.export		_Employee_destroy
	.export		_ListNode_display
	.export		_ListNode_ListNode
	.export		_ListNode_new
	.export		_ListNode_destroy
	.export		_List_insertbefore
	.export		_List_insertafter
	.export		_List_rm
	.export		_List_clear
	.export		_List_display
	.export		_List_displayall
	.export		_List_forward
	.export		_List_backward
	.export		_List_List
	.export		_List_new
	.export		_List_destroy
	.export		_read_employee
	.export		_docmd
	.export		_main

.segment	"RODATA"

L005B:
	.byte	$4C,$69,$73,$74,$5F,$4E,$6F,$64,$65,$3A,$20,$30,$78,$25,$78,$20
	.byte	$3A,$20,$65,$6D,$70,$3D,$30,$78,$25,$78,$20,$6E,$65,$78,$74,$3D
	.byte	$30,$78,$25,$78,$20,$70,$72,$65,$76,$3D,$30,$78,$25,$78,$0A,$00
L0049:
	.byte	$25,$73,$3A,$20,$45,$52,$52,$4F,$52,$3A,$20,$4D,$65,$6D,$6F,$72
	.byte	$79,$20,$61,$6C,$6C,$6F,$63,$61,$74,$69,$6F,$6E,$20,$66,$61,$69
	.byte	$6C,$65,$64,$0A,$00
L0071	:=	L0049+0
L0121	:=	L0049+0
L002E:
	.byte	$45,$6D,$70,$6C,$6F,$79,$65,$65,$3A,$20,$25,$78,$3A,$20,$20,$25
	.byte	$6C,$75,$3A,$20,$25,$73,$20,$3A,$00
L00F6:
	.byte	$25,$6C,$64,$20,$6E,$6F,$64,$65,$73,$20,$6F,$6E,$20,$74,$68,$65
	.byte	$20,$6C,$69,$73,$74,$3A,$0A,$00
L0173:
	.byte	$55,$6E,$6B,$6F,$77,$6E,$20,$43,$6F,$6D,$6D,$61,$6E,$64,$0A,$00
L004B:
	.byte	$45,$6D,$70,$6C,$6F,$79,$65,$65,$5F,$6E,$65,$77,$00
L0131:
	.byte	$25,$6C,$75,$20,$25,$37,$39,$73,$20,$25,$6C,$64,$00
L0073:
	.byte	$4C,$69,$73,$74,$4E,$6F,$64,$65,$5F,$6E,$65,$77,$00
L0123:
	.byte	$4C,$69,$73,$74,$5F,$6E,$65,$77,$00
L0035:
	.byte	$20,$25,$6C,$64,$0A,$00
L0057:
	.byte	$4E,$55,$4C,$4C,$0A,$00
L017F:
	.byte	$25,$63,$00

; ---------------------------------------------------------------
; unsigned long __near__ Employee_get_id (__near__ struct Employee*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Employee_get_id: near

.segment	"CODE"

	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     ldeaxi
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ Employee_set_id (__near__ struct Employee*, unsigned long)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Employee_set_id: near

.segment	"CODE"

	ldy     #$07
	jsr     pushwysp
	ldy     #$05
	jsr     ldeaxysp
	ldy     #$00
	jsr     steaxspidx
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; void __near__ Employee_get_name (__near__ struct Employee*, __near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Employee_get_name: near

.segment	"CODE"

	jsr     decsp2
	ldy     #$00
	tya
	sta     (sp),y
	iny
	sta     (sp),y
L0008:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$50
	txa
	sbc     #$00
	bvc     L000F
	eor     #$80
L000F:	bpl     L0009
	ldy     #$02
	lda     (sp),y
	ldy     #$00
	clc
	adc     (sp),y
	sta     sreg
	ldy     #$03
	lda     (sp),y
	ldy     #$01
	adc     (sp),y
	sta     sreg+1
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$04
	bcc     L0015
	inx
L0015:	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sta     (sreg),y
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$01
	bcc     L0011
	inx
L0011:	jsr     stax0sp
	jmp     L0008
L0009:	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; void __near__ Employee_set_name (__near__ struct Employee*, __near__ unsigned char*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Employee_set_name: near

.segment	"CODE"

	jsr     decsp2
	ldy     #$00
	tya
	sta     (sp),y
	iny
	sta     (sp),y
L0018:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	cmp     #$50
	txa
	sbc     #$00
	bvc     L001F
	eor     #$80
L001F:	bpl     L0019
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$04
	bcc     L0023
	inx
L0023:	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     ptr1
	sta     sreg
	txa
	adc     ptr1+1
	sta     sreg+1
	ldy     #$02
	lda     (sp),y
	clc
	ldy     #$00
	adc     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (sp),y
	ldy     #$01
	adc     (sp),y
	sta     ptr1+1
	dey
	lda     (ptr1),y
	sta     (sreg),y
	iny
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$01
	bcc     L0021
	inx
L0021:	jsr     stax0sp
	jmp     L0018
L0019:	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; unsigned long __near__ Employee_get_salary (__near__ struct Employee*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Employee_get_salary: near

.segment	"CODE"

	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$57
	jsr     ldeaxidx
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ Employee_set_salary (__near__ struct Employee*, long)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Employee_set_salary: near

.segment	"CODE"

	ldy     #$07
	jsr     pushwysp
	ldy     #$05
	jsr     ldeaxysp
	ldy     #$54
	jsr     steaxspidx
	jmp     incsp6

.endproc

; ---------------------------------------------------------------
; void __near__ Employee_display (__near__ struct Employee*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Employee_display: near

.segment	"CODE"

	lda     #<(L002E)
	ldx     #>(L002E)
	jsr     pushax
	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     ldeaxi
	jsr     pusheax
	ldy     #$09
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	clc
	adc     #$04
	bcc     L0033
	inx
L0033:	jsr     pushax
	ldy     #$0A
	jsr     _cprintf
	lda     #<(L0035)
	ldx     #>(L0035)
	jsr     pushax
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$57
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$06
	jsr     _cprintf
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ Employee_Employee (__near__ struct Employee*, unsigned long, __near__ unsigned char*, long)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Employee_Employee: near

.segment	"CODE"

	jsr     decsp6
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$0F
	jsr     ldeaxysp
	jsr     steax0sp
	jsr     _Employee_set_id
	jsr     decsp4
	ldy     #$0F
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$09
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	jsr     _Employee_set_name
	jsr     decsp6
	ldy     #$11
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$09
	jsr     ldeaxysp
	jsr     steax0sp
	jsr     _Employee_set_salary
	ldy     #$0C
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; __near__ struct Employee* __near__ Employee_new (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Employee_new: near

.segment	"CODE"

	ldx     #$00
	lda     #$58
	jsr     _malloc
	jsr     pushax
	ldy     #$00
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L018B
	lda     #<(L0049)
	ldx     #>(L0049)
	jsr     pushax
	lda     #<(L004B)
	ldx     #>(L004B)
	jsr     pushax
	ldy     #$04
	jsr     _cprintf
	ldx     #$00
	txa
	jmp     incsp2
L018B:	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ Employee_destroy (__near__ struct Employee*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_Employee_destroy: near

.segment	"CODE"

	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _free
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ListNode_display (__near__ struct ListNode*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ListNode_display: near

.segment	"CODE"

	ldy     #$00
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L0053
	lda     #<(L0057)
	ldx     #>(L0057)
	jsr     pushax
	ldy     #$02
	jsr     _cprintf
	jmp     incsp2
L0053:	lda     #<(L005B)
	ldx     #>(L005B)
	jsr     pushax
	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldy     #$0A
	jsr     _cprintf
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	jsr     _Employee_display
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ListNode_ListNode (__near__ struct ListNode*, __near__ struct Employee*, __near__ struct ListNode*, __near__ struct ListNode*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ListNode_ListNode: near

.segment	"CODE"

	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; __near__ struct ListNode* __near__ ListNode_new (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ListNode_new: near

.segment	"CODE"

	ldx     #$00
	lda     #$06
	jsr     _malloc
	jsr     pushax
	ldy     #$00
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L018C
	lda     #<(L0071)
	ldx     #>(L0071)
	jsr     pushax
	lda     #<(L0073)
	ldx     #>(L0073)
	jsr     pushax
	ldy     #$04
	jsr     _cprintf
	ldx     #$00
	txa
	jmp     incsp2
L018C:	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ ListNode_destroy (__near__ struct ListNode*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_ListNode_destroy: near

.segment	"CODE"

	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	jsr     _Employee_destroy
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _free
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ List_insertbefore (__near__ struct List*, __near__ struct Employee*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_insertbefore: near

.segment	"CODE"

	jsr     decsp4
	jsr     _ListNode_new
	ldy     #$02
	jsr     staxysp
	jsr     decsp8
	ldy     #$0B
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$06
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	iny
	sta     (sp),y
	tay
	sta     (sp),y
	iny
	sta     (sp),y
	jsr     _ListNode_ListNode
	ldy     #$07
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     pushax
	ldy     #$05
	jsr     ldeaxidx
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$02
	jsr     steaxspidx
	jsr     resteax
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L0085
	cmp     #$00
	bne     L0085
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	jmp     incsp8
L0085:	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	ldy     #$05
	jsr     pushwysp
	ldy     #$09
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$02
	jsr     staxspidx
	iny
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	ldy     #$00
	lda     (sp),y
	iny
	ora     (sp),y
	beq     L0092
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
L0092:	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; void __near__ List_insertafter (__near__ struct List*, __near__ struct Employee*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_insertafter: near

.segment	"CODE"

	jsr     decsp4
	jsr     _ListNode_new
	ldy     #$02
	jsr     staxysp
	jsr     decsp8
	ldy     #$0B
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$06
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	lda     #$00
	ldy     #$02
	sta     (sp),y
	iny
	sta     (sp),y
	tay
	sta     (sp),y
	iny
	sta     (sp),y
	jsr     _ListNode_ListNode
	ldy     #$07
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     pushax
	ldy     #$05
	jsr     ldeaxidx
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$02
	jsr     steaxspidx
	jsr     resteax
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L00A0
	cmp     #$00
	bne     L00A0
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	jmp     incsp8
L00A0:	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
	ldy     #$07
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	ldy     #$05
	jsr     pushwysp
	ldy     #$09
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$04
	jsr     staxspidx
	ldy     #$00
	lda     (sp),y
	iny
	ora     (sp),y
	beq     L00AD
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
L00AD:	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; void __near__ List_rm (__near__ struct List*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_rm: near

.segment	"CODE"

	jsr     decsp2
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L0190
	cmp     #$00
	bne     L0190
	jmp     incsp4
L0190:	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$04
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	iny
	ora     (ptr1),y
	beq     L00B6
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     staxspidx
	iny
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
L00B6:	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$02
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	iny
	ora     (ptr1),y
	beq     L018F
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     staxspidx
	dey
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
	ldy     #$03
L018F:	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L00C2
	cmp     #$00
	bne     L00C2
	dey
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L00C2
	cmp     #$00
	bne     L00C2
	tay
	sta     (sp),y
	iny
	sta     (sp),y
L00C2:	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	jsr     _ListNode_destroy
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	iny
	txa
	sta     (ptr1),y
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     pushax
	ldy     #$05
	jsr     ldeaxidx
	jsr     saveeax
	ldy     #$01
	jsr     deceaxy
	iny
	jsr     steaxspidx
	jsr     resteax
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ List_clear (__near__ struct List*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_clear: near

.segment	"CODE"

	jsr     decsp2
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L00D5
	cmp     #$00
	bne     L00D5
	jmp     incsp4
L00D3:	iny
	jsr     pushwysp
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$00
	jsr     staxspidx
L00D5:	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L00D3
	cmp     #$00
	bne     L00D3
	jmp     L00DC
L00DA:	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
	ldy     #$05
	jsr     pushwysp
	ldy     #$05
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$01
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$00
	jsr     staxspidx
	jsr     pushw0sp
	jsr     _ListNode_destroy
	ldy     #$03
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     pushax
	ldy     #$05
	jsr     ldeaxidx
	jsr     saveeax
	ldy     #$01
	jsr     deceaxy
	iny
	jsr     steaxspidx
	jsr     resteax
L00DC:	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L00DA
	cmp     #$00
	bne     L00DA
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ List_display (__near__ struct List*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_display: near

.segment	"CODE"

	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     pushax
	jsr     _ListNode_display
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ List_displayall (__near__ struct List*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_displayall: near

.segment	"CODE"

	jsr     decsp2
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
	cpx     #$00
	bne     L00F1
	cmp     #$00
	bne     L00F1
	jmp     incsp4
L00EF:	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
L00F1:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1),y
	iny
	ora     (ptr1),y
	bne     L00EF
	lda     #<(L00F6)
	ldx     #>(L00F6)
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	iny
	jsr     ldeaxidx
	jsr     pusheax
	ldy     #$06
	jsr     _cprintf
	jmp     L00FB
L0191:	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     pushax
	jsr     _ListNode_display
	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	jsr     stax0sp
L00FB:	ldy     #$00
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L0191
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ List_forward (__near__ struct List*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_forward: near

.segment	"CODE"

	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L0192
	cmp     #$00
	beq     L0103
L0192:	iny
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L0104
	cmp     #$00
	jeq     incsp2
L0104:	jsr     pushw0sp
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$03
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$00
	jsr     staxspidx
L0103:	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ List_backward (__near__ struct List*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_backward: near

.segment	"CODE"

	ldy     #$01
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L0193
	cmp     #$00
	beq     L010C
L0193:	iny
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	cpx     #$00
	bne     L010D
	cmp     #$00
	jeq     incsp2
L010D:	jsr     pushw0sp
	ldy     #$03
	lda     (sp),y
	sta     ptr1+1
	dey
	lda     (sp),y
	sta     ptr1
	dey
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	sta     ptr1
	stx     ptr1+1
	ldy     #$05
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	ldy     #$00
	jsr     staxspidx
L010C:	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ List_List (__near__ struct List*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_List: near

.segment	"CODE"

	ldy     #$01
	lda     (sp),y
	sta     sreg+1
	dey
	lda     (sp),y
	sta     sreg
	tya
	tay
	sta     (sreg),y
	iny
	sta     (sreg),y
	jsr     pushw0sp
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	ldy     #$02
	jsr     steaxspidx
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; __near__ struct List* __near__ List_new (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_new: near

.segment	"CODE"

	jsr     decsp2
	ldx     #$00
	lda     #$06
	jsr     _malloc
	jsr     stax0sp
	cpx     #$00
	bne     L011D
	cmp     #$00
	bne     L011D
	lda     #<(L0121)
	ldx     #>(L0121)
	jsr     pushax
	lda     #<(L0123)
	ldx     #>(L0123)
	jsr     pushax
	ldy     #$04
	jsr     _cprintf
	ldx     #$00
	txa
	jmp     incsp2
L011D:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ List_destroy (__near__ struct List*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_List_destroy: near

.segment	"CODE"

	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$05
	jsr     ldeaxidx
	jsr     tsteax
	beq     L0128
	jsr     pushw0sp
	jsr     _List_clear
L0128:	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _free
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; __near__ struct Employee* __near__ read_employee (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_read_employee: near

.segment	"CODE"

	ldy     #$5A
	jsr     subysp
	lda     #<(L0131)
	ldx     #>(L0131)
	jsr     pushax
	lda     sp
	ldx     sp+1
	clc
	adc     #$58
	bcc     L0134
	inx
L0134:	jsr     pushax
	lda     sp
	ldx     sp+1
	clc
	adc     #$0A
	bcc     L0136
	inx
L0136:	jsr     pushax
	lda     sp
	ldx     sp+1
	clc
	adc     #$08
	bcc     L0138
	inx
L0138:	jsr     pushax
	ldy     #$08
	jsr     _cscanf
	jsr     _Employee_new
	jsr     stax0sp
	ldy     #$0C
	jsr     subysp
	ldy     #$0D
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$0A
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$65
	jsr     ldeaxysp
	ldy     #$06
	jsr     steaxysp
	lda     sp
	ldx     sp+1
	clc
	adc     #$12
	bcc     L013F
	inx
L013F:	ldy     #$04
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$11
	jsr     ldeaxysp
	jsr     steax0sp
	jsr     _Employee_Employee
	ldy     #$01
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$5A
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; int __near__ docmd (unsigned char, __near__ struct List*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_docmd: near

.segment	"CODE"

	lda     #$01
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	cmp     #$0A
	jeq     L0146
	cmp     #$44
	beq     L014C
	cmp     #$49
	beq     L0158
	cmp     #$62
	beq     L0154
	cmp     #$63
	jeq     L0168
	cmp     #$64
	beq     L0148
	cmp     #$66
	beq     L0150
	cmp     #$69
	beq     L015E
	cmp     #$71
	jeq     L0194
	cmp     #$72
	jeq     L0164
	jmp     L0171
L0148:	iny
	jsr     pushwysp
	jsr     _List_display
	jmp     L0146
L014C:	iny
	jsr     pushwysp
	jsr     _List_displayall
	jmp     L0146
L0150:	iny
	jsr     pushwysp
	jsr     _List_forward
	jmp     L0146
L0154:	iny
	jsr     pushwysp
	jsr     _List_backward
	jmp     L0146
L0158:	jsr     _read_employee
	jsr     pushax
	jsr     decsp4
	ldy     #$09
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	jsr     _List_insertbefore
	jsr     incsp2
	jmp     L0146
L015E:	jsr     _read_employee
	jsr     pushax
	jsr     decsp4
	ldy     #$09
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	jsr     _List_insertafter
	jsr     incsp2
	jmp     L0146
L0164:	iny
	jsr     pushwysp
	jsr     _List_rm
	jmp     L0146
L0168:	iny
	jsr     pushwysp
	jsr     _List_clear
	jmp     L0146
L0194:	ldy     #$00
	tya
	sta     (sp),y
	iny
	sta     (sp),y
	jmp     L0195
L0171:	lda     #<(L0173)
	ldx     #>(L0173)
	jsr     pushax
	ldy     #$02
	jsr     _cprintf
L0146:	ldy     #$01
L0195:	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     decsp3
	jsr     _List_new
	jsr     pushax
	jsr     pushw0sp
	jsr     _List_List
L017A:	lda     #<(L017F)
	ldx     #>(L017F)
	jsr     pushax
	lda     sp
	ldx     sp+1
	clc
	adc     #$06
	bcc     L0182
	inx
L0182:	jsr     pushax
	ldy     #$04
	jsr     _cscanf
	jsr     decsp3
	ldy     #$07
	lda     (sp),y
	ldy     #$02
	sta     (sp),y
	ldy     #$04
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$00
	sta     (sp),y
	iny
	txa
	sta     (sp),y
	jsr     _docmd
	ldy     #$02
	jsr     staxysp
	cpx     #$00
	bne     L017A
	cmp     #$00
	bne     L017A
	jmp     incsp5

.endproc

